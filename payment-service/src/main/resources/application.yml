server:
  port: 8080
stripe:
  keys:
    pk: ${STRIPE_API_PUBLIC_KEY}
    sk: ${STRIPE_API_SECRET_KEY}
spring:
  application:
    name: payment-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://db-payments:5447/payments}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    dbcp2:
      driver: org.postgresql.Driver
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
feign:
  client:
    config:
      ride:
        name: ride-service
        path: /api/v1/rides
resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowSize: 5
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
management:
  endpoint.health.show-details: "ALWAYS"
  endpoints.web.exposure.include: "*"
  tracing:
    enabled: true
    sampling:
      probability: 0.5
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"